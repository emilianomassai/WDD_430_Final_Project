{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/router\";\nexport class ContactEditComponent {\n  constructor(contactService, router, route) {\n    this.contactService = contactService;\n    this.router = router;\n    this.route = route;\n    this.groupContacts = [];\n    this.editMode = false;\n    this.hasGroup = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      if (!id) {\n        this.editMode = false;\n        return;\n      }\n      this.originalContact = this.contactService.getContact(id);\n      if (!this.originalContact) {\n        return;\n      }\n      this.editMode = true;\n      this.contact = JSON.parse(JSON.stringify(this.originalContact));\n      if (this.contact.group !== null && this.contact.group !== undefined) {\n        this.hasGroup = true;\n        this.groupContacts = [...this.contact.group];\n      }\n    });\n  }\n  onCancel() {\n    this.router.navigate(['/contacts'], {\n      relativeTo: this.route\n    });\n  }\n  onSubmit(form) {\n    // const values = form.value;\n    // const newContact = new Contact('', values.name, values.email, values.phone, values.imageUrl, this.groupContacts);\n    // if (this.editMode === true) {\n    //   this.contactService.updateContact(this.originalContact, newContact);\n    // } else {\n    //   this.contactService.addContact(newContact);\n    // }\n    this.router.navigate(['/contacts'], {\n      relativeTo: this.route\n    });\n  }\n  isInvalidContact(newContact) {\n    // if (!newContact) {\n    //   return true;\n    // }\n    // if (newContact.id === this.contact.id) {\n    //   return true;\n    // }\n    // for (let i = 0; i < this.groupContacts.length; i++) {\n    //   if (newContact.id === this.groupContacts[i].id) {\n    //     return true;\n    //   }\n    // }\n    // return false;\n  }\n  addToGroup($event) {\n    // const selectedContact: Contact = $event.dragData;\n    // this.invalidGroupContact = this.isInvalidContact(selectedContact);\n    // if (this.invalidGroupContact) {\n    //   console.log('Not valid!')\n    //   return;\n    // }\n    // this.groupContacts.push(selectedContact);\n    // this.invalidGroupContact = false;\n  }\n  onRemoveItem(id) {\n    // if (id < 0 || id >= this.groupContacts.length) {\n    //   return;\n    // }\n    // this.groupContacts.splice(id, 1);\n    // this.invalidGroupContact = false;\n  }\n}\nContactEditComponent.ɵfac = function ContactEditComponent_Factory(t) {\n  return new (t || ContactEditComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nContactEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactEditComponent,\n  selectors: [[\"app-contact-edit\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"panel\", \"panel-default\"]],\n  template: function ContactEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\".required.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\n.invalid.ng-invalid.ng-dirty[_ngcontent-%COMP%] {\\n  border: 1px solid red;\\n}\\n\\ninput.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched\\n\\n.pad-left-right[_ngcontent-%COMP%]{\\n  padding-left:.1rem;\\n}\\n\\n.deleteButton[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n  margin-left: -1.2rem;\\n  width: 3.4rem;\\n}\\n\\n.buttonDiv[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n}\\n\\n.groupDiv[_ngcontent-%COMP%] {\\n  min-height: 6rem;\\n  border: solid thin lightgrey;\\n}\\n\\n.dragMsg[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  color: darkgrey;\\n  margin-left: 3rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGFjdHMvY29udGFjdC1lZGl0L2NvbnRhY3QtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTs7OztFQUlFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiXG4ucmVxdWlyZWQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4uaW52YWxpZC5uZy1pbnZhbGlkLm5nLWRpcnR5IHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG5pbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQsXG50ZXh0YXJlYS5uZy1pbnZhbGlkLm5nLXRvdWNoZWRcblxuLnBhZC1sZWZ0LXJpZ2h0e1xuICBwYWRkaW5nLWxlZnQ6LjFyZW07XG59XG5cbi5kZWxldGVCdXR0b24ge1xuICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAtMS4ycmVtO1xuICB3aWR0aDogMy40cmVtO1xufVxuXG4uYnV0dG9uRGl2IHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xufVxuXG4uZ3JvdXBEaXYge1xuICBtaW4taGVpZ2h0OiA2cmVtO1xuICBib3JkZXI6IHNvbGlkIHRoaW4gbGlnaHRncmV5O1xufVxuXG4uZHJhZ01zZyB7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgY29sb3I6IGRhcmtncmV5O1xuICBtYXJnaW4tbGVmdDogM3JlbTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAaA,OAAM,MAAOA,oBAAoB;EAa/BC,YAAoBC,cAA8B,EAAUC,MAAc,EAAUC,KAAqB;IAArF,mBAAc,GAAdF,cAAc;IAA0B,WAAM,GAANC,MAAM;IAAkB,UAAK,GAALC,KAAK;IAPzF,kBAAa,GAAc,EAAE;IAE7B,aAAQ,GAAY,KAAK;IACzB,aAAQ,GAAY,KAAK;EAIoF;EAE7GC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CACxBD,MAAc,IAAI;MAEjB,MAAME,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MAGvB,IAAI,CAACE,EAAE,EAAE;QAEP,IAAI,CAACC,QAAQ,GAAG,KAAK;QACrB;;MAKF,IAAI,CAACC,eAAe,GAAG,IAAI,CAACR,cAAc,CAACS,UAAU,CAACH,EAAE,CAAC;MAGzD,IAAI,CAAC,IAAI,CAACE,eAAe,EAAE;QAEzB;;MAIF,IAAI,CAACD,QAAQ,GAAG,IAAI;MAEpB,IAAI,CAACG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,eAAe,CAAC,CAAC;MAG/D,IAAI,IAAI,CAACE,OAAO,CAACI,KAAK,KAAK,IAAI,IAAI,IAAI,CAACJ,OAAO,CAACI,KAAK,KAAKC,SAAS,EAAE;QAEnE,IAAI,CAACC,QAAQ,GAAG,IAAI;QAIpB,IAAI,CAACC,aAAa,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,CAACI,KAAK,CAAC;;IAEhD,CAAC,CACF;EACH;EAEAI,QAAQ;IACN,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAAClB;IAAK,CAAE,CAAC;EACjE;EAEAmB,QAAQ,CAACC,IAAY;IAEnB;IAGA;IAGA;IAEA;IACA;IAEA;IACA;IAGA,IAAI,CAACrB,MAAM,CAACkB,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAAClB;IAAK,CAAE,CAAC;EACjE;EAGAqB,gBAAgB,CAACC,UAAmB;IAElC;IAEA;IACA;IAIA;IAEA;IACA;IAGA;IAEA;IAEA;IACA;IACA;IAGA;EAAA;EAIFC,UAAU,CAACC,MAAW;IAEpB;IAEA;IAEA;IAEA;IACA;IACA;IAEA;IAEA;EAAA;EAIFC,YAAY,CAACrB,EAAU;IAErB;IAEA;IACA;IAGA;IAEA;EAAA;;AAzISR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjCC,yBA8IM","names":["ContactEditComponent","constructor","contactService","router","route","ngOnInit","params","subscribe","id","editMode","originalContact","getContact","contact","JSON","parse","stringify","group","undefined","hasGroup","groupContacts","onCancel","navigate","relativeTo","onSubmit","form","isInvalidContact","newContact","addToGroup","$event","onRemoveItem","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/contacts/contact-edit/contact-edit.component.ts","/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/contacts/contact-edit/contact-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Contact } from '../contacts.model';\nimport { ContactService } from '../contact.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css']\n})\nexport class ContactEditComponent implements OnInit {\n  validContact!: boolean;\n\n  contact!: Contact;\n  originalContact!: Contact;\n\n  groupContacts: Contact[] = [];\n\n  editMode: boolean = false;\n  hasGroup: boolean = false;\n  invalidGroupContact!: boolean;\n\n\n  constructor(private contactService: ContactService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n\n        const id = params['id'];\n\n\n        if (!id) {\n\n          this.editMode = false;\n          return;\n        }\n\n\n\n        this.originalContact = this.contactService.getContact(id);\n\n\n        if (!this.originalContact) {\n\n          return;\n        }\n\n\n        this.editMode = true;\n\n        this.contact = JSON.parse(JSON.stringify(this.originalContact));\n\n\n        if (this.contact.group !== null && this.contact.group !== undefined) {\n\n          this.hasGroup = true;\n\n\n\n          this.groupContacts = [...this.contact.group];\n        }\n      }\n    )\n  }\n\n  onCancel() {\n    this.router.navigate(['/contacts'], { relativeTo: this.route });\n  }\n\n  onSubmit(form: NgForm) {\n\n    // const values = form.value;\n\n\n    // const newContact = new Contact('', values.name, values.email, values.phone, values.imageUrl, this.groupContacts);\n\n\n    // if (this.editMode === true) {\n\n    //   this.contactService.updateContact(this.originalContact, newContact);\n    // } else {\n\n    //   this.contactService.addContact(newContact);\n    // }\n\n\n    this.router.navigate(['/contacts'], { relativeTo: this.route });\n  }\n\n\n  isInvalidContact(newContact: Contact) {\n\n    // if (!newContact) {\n\n    //   return true;\n    // }\n\n\n\n    // if (newContact.id === this.contact.id) {\n\n    //   return true;\n    // }\n\n\n    // for (let i = 0; i < this.groupContacts.length; i++) {\n\n    //   if (newContact.id === this.groupContacts[i].id) {\n\n    //     return true;\n    //   }\n    // }\n\n\n    // return false;\n  }\n\n\n  addToGroup($event: any) {\n\n    // const selectedContact: Contact = $event.dragData;\n\n    // this.invalidGroupContact = this.isInvalidContact(selectedContact);\n\n    // if (this.invalidGroupContact) {\n\n    //   console.log('Not valid!')\n    //   return;\n    // }\n\n    // this.groupContacts.push(selectedContact);\n\n    // this.invalidGroupContact = false;\n  }\n\n\n  onRemoveItem(id: number) {\n\n    // if (id < 0 || id >= this.groupContacts.length) {\n\n    //   return;\n    // }\n\n\n    // this.groupContacts.splice(id, 1);\n\n    // this.invalidGroupContact = false;\n  }\n\n}","<div class=\"panel panel-default\">\n  <!-- <div class=\"panel-body\">\n    <form id=\"contact-edit\" #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            class=\"form-control required\"\n            size=\"120\"\n            max=\"120\"\n            name=\"title\"\n            [ngModel]=\"contact?.title\"\n            #title=\"ngModel\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"overview\">Description:</label>\n          <input\n            type=\"text\"\n            id=\"overview\"\n            class=\"form-control required\"\n            size=\"120\"\n            max=\"255\"\n            name=\"overview\"\n            [ngModel]=\"contact?.overview\"\n            #overview=\"ngModel\"\n            required\n          />\n          <div\n            *ngIf=\"email.touched == true && email.valid == false\"\n            class=\"alert alert-danger\"\n          >\n            Enter a valid email address\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"phone\">Phone:</label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            class=\"form-control invalid\"\n            size=\"150\"\n            max=\"255\"\n            name=\"phone\"\n            [ngModel]=\"contact?.phone\"\n            #phone=\"ngModel\"\n            pattern=\"\\D*([2-9]\\d{2})(\\D*)([2-9]\\d{2})(\\D*)(\\d{4})\\D*\"\n          />\n          <div\n            *ngIf=\"phone.touched == true && phone.valid == false\"\n            class=\"alert alert-danger\"\n          >\n            Enter a valid phone number\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            class=\"form-control\"\n            size=\"150\"\n            max=\"255\"\n            name=\"imageUrl\"\n            [ngModel]=\"contact?.imageUrl\"\n            #imageUrl=\"ngModel\"\n          />\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"\n          (name.touched == true && name.valid == false) ||\n          (email.touched == true && email.valid == false)\n        \"\n        class=\"alert alert-danger\"\n      >\n        The Name and Email fields are required.\n      </div>\n\n      <div class=\"row\">\n        <div class=\"form-group\">\n          <label for=\"groupList\">Group Contacts:</label>\n          <br />\n          <div *ngIf=\"invalidGroupContact\" class=\"alert alert-danger\">\n            Contact can not be added to the group. It is already in group or is\n            current contact.\n          </div>\n\n          <div\n            class=\"row\"\n            id=\"groupList\"\n            style=\"min-height: 3rem\"\n            dnd-droppable\n            [dropZones]=\"['contactGroup']\"\n            (onDropSuccess)=\"addToGroup($event)\"\n          >\n            <div *ngFor=\"let contact of groupContacts; let i = index\">\n              <div>\n                <app-contact-item\n                  class=\"col-sm-11\"\n                  [contact]=\"contact\"\n                ></app-contact-item>\n                <button\n                  class=\"btn btn-danger col-sm-2 deleteButton\"\n                  (click)=\"onRemoveItem(i)\"\n                >\n                  X\n                </button>\n              </div>\n            </div>\n            <span class=\"dragMsg\" *ngIf=\"groupContacts.length < 1\"\n              >Drag contacts in group here</span\n            >\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button [disabled]=\"!f.valid\" class=\"btn btn-success\" type=\"submit\">\n            Save\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  </div> -->\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}