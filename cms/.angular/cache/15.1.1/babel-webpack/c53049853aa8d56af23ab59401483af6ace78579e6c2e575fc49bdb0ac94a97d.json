{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TrendingMovieService {\n  constructor(http) {\n    this.http = http;\n    this.trendingMovieChangedEvent = new EventEmitter();\n    this.trendingMovieListChangedEvent = new Subject();\n    this.data = [];\n    this.topRated = [];\n    this.trendingMovies = [];\n    this.maxTrendingMovieId = this.getMaxId();\n  }\n  findTrending() {\n    return this.http.get('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd');\n  }\n  getTrendingMovies() {\n    // // this.http.get<Contact[]>('https://cms-wdd430-58d60-default-rtdb.firebaseio.com/contacts.json')\n    // this.http.get<{ message: string; contacts: Contact[] }>('http://127.0.0.1:4200/contacts')\n    //   .subscribe(\n    //     (contactsData) => {\n    //       this.contacts = contactsData.contacts;\n    //       this.maxContactId = this.getMaxId();\n    //       console.log(contactsData.contacts)\n    //       // this.contacts.sort((a, b) => (a.name < b.name) ? 1 : (a.name > b.name) ? -1 : 0);\n    //       this.contactListChangedEvent.next(this.contacts.slice());\n    //       (error: any) => {\n    //         console.log(error);\n    //       }\n    //     })\n  }\n  // getContacts(): Contact[] { return this.contacts.slice(); }\n  getTrendingMovie(id) {\n    // const url = 'https://api.themoviedb.org/3/'\n    // const apiKey = 'f4ec058abc3d746728270f736f4851fd'\n    // console.log(\"`${url}contact/${id}?api_key=${apiKey}`\" + `${url}movie/${id}?api_key=${apiKey}`)\n    // return this.http.get(`${url}movie/${id}?api_key=${apiKey}`);\n    // const url = 'https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd'\n    // this.http.get(url).subscribe((res) => {\n    //   this.data = res\n    //   this.topRated = this.data.results\n    //   for (let i = 0; i < this.topRated.length; i++) {\n    //     if (this.topRated[i].id == id) {\n    //       console.log(\"Movie selected\")\n    //       console.log(\"Id: \" + this.topRated[i].id)\n    //       console.log(\"Title: \" + this.topRated[i].title)\n    //       console.log(\"Overview: \" + this.topRated[i].overview)\n    //       console.log(\"Poster: \" + this.topRated[i].poster_path)\n    //       console.log(\"Vote: \" + this.topRated[i].vote_average)\n    //       console.log(\"Release: \" + this.topRated[i].release_date)\n    //       console.log('topRated[i]' + this.topRated[i])\n    //       return this.topRated[i];\n    //     }\n    //   }\n    // })\n    return null;\n  }\n  // getContact(id: string): Contact {\n  //   const url = 'https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd'\n  //   this.http.get(url).subscribe((res) => {\n  //     this.data = res\n  //     this.topRated = this.data.results\n  //     for (let i = 0; i < this.topRated.length; i++) {\n  //       if (this.topRated[i].id == id) {\n  //         console.log(\"Movie selected\")\n  //         console.log(\"Id: \" + this.topRated[i].id)\n  //         console.log(\"Title: \" + this.topRated[i].title)\n  //         console.log(\"Overview: \" + this.topRated[i].overview)\n  //         console.log(\"Poster: \" + this.topRated[i].poster_path)\n  //         console.log(\"Vote: \" + this.topRated[i].vote_average)\n  //         console.log(\"Release: \" + this.topRated[i].release_date)\n  //         return this.topRated[i];\n  //       }\n  //     }\n  //   })\n  //   return null!;\n  // }\n  getMaxId() {\n    let maxId = 0;\n    for (const trendingMovie of this.trendingMovies) {\n      const currentId = +trendingMovie.id;\n      if (currentId > maxId) {\n        maxId = currentId;\n      }\n    }\n    return maxId;\n  }\n  addTrendingMovie(newTrendingMovie) {\n    if (newTrendingMovie === null || newTrendingMovie === undefined) {\n      return;\n    }\n    // this.maxContactId++;\n    // newContact.id = this.maxContactId.toString();\n    // this.contacts.push(newContact);\n    // this.storeContacts();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    newContact.id = '';\n    const strContact = JSON.stringify(newContact);\n    this.http.post('http://127.0.0.1:4200/contacts/', strContact, {\n      headers: headers\n    }).subscribe(() => {\n      this.contactChangedEvent.next(this.contacts.slice());\n    });\n  }\n  updateContact(originalContact, newContact) {\n    if (!originalContact || !newContact) {\n      return;\n    }\n    const pos = this.contacts.findIndex(c => c.id === originalContact.id);\n    // const pos = this.contacts.indexOf(originalContact);\n    if (pos < 0) {\n      return;\n    }\n    newContact.id = originalContact.id;\n    // newContact.id = originalContact.id;\n    // this.contacts[pos] = newContact;\n    // this.storeContacts();\n    //set headers\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // const strContact = JSON.stringify(newContact);\n    this.http.patch('http://127.0.0.1:4200/contacts/' + originalContact.id, newContact, {\n      headers: headers\n    }).subscribe(() => {\n      this.contacts[pos] = newContact;\n      this.contactListChangedEvent.next(this.contacts.slice());\n    });\n  }\n  deleteContact(contact) {\n    // if (contact === null || contact === undefined) {\n    //   return;\n    // }\n    // const pos = this.contacts.indexOf(contact);\n    // if (pos < 0) {\n    //   return;\n    // }\n    // // this.contacts.splice(pos, 1);\n    // // this.storeContacts();\n    // this.http.delete('http://127.0.0.1:4200/contacts/' + contact.id)\n    //   .subscribe(\n    //     () => {\n    //       this.contactListChangedEvent.next(this.contacts.slice());\n    //     });\n  }\n  storeContacts() {\n    let contacts = JSON.stringify(this.contacts);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.http.put('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd', contacts, {\n      headers: headers\n    }).subscribe(() => {\n      this.contactListChangedEvent.next(this.contacts.slice());\n    });\n  }\n}\nTrendingMovieService.ɵfac = function TrendingMovieService_Factory(t) {\n  return new (t || TrendingMovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nTrendingMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrendingMovieService,\n  factory: TrendingMovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","HttpHeaders","Subject","TrendingMovieService","constructor","http","maxTrendingMovieId","getMaxId","findTrending","get","getTrendingMovies","getTrendingMovie","id","maxId","trendingMovie","trendingMovies","currentId","addTrendingMovie","newTrendingMovie","undefined","headers","newContact","strContact","JSON","stringify","post","subscribe","contactChangedEvent","next","contacts","slice","updateContact","originalContact","pos","findIndex","c","patch","contactListChangedEvent","deleteContact","contact","storeContacts","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/trendingMovies/trendingMovie.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TrendingMovie } from './trendingMovies.model';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrendingMovieService {\n  trendingMovieChangedEvent = new EventEmitter<TrendingMovie[]>();\n\n  trendingMovieListChangedEvent = new Subject<TrendingMovie[]>();\n\n  maxTrendingMovieId: number;\n  public data: any = [];\n  public topRated: any = [];\n\n  private trendingMovies: TrendingMovie[] = [];\n\n  constructor(private http: HttpClient) {\n\n    this.maxTrendingMovieId = this.getMaxId();\n  }\n\n\n  findTrending() {\n    return this.http.get('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd');\n\n  }\n\n  getTrendingMovies() {\n\n    // // this.http.get<Contact[]>('https://cms-wdd430-58d60-default-rtdb.firebaseio.com/contacts.json')\n    // this.http.get<{ message: string; contacts: Contact[] }>('http://127.0.0.1:4200/contacts')\n    //   .subscribe(\n    //     (contactsData) => {\n    //       this.contacts = contactsData.contacts;\n    //       this.maxContactId = this.getMaxId();\n    //       console.log(contactsData.contacts)\n\n    //       // this.contacts.sort((a, b) => (a.name < b.name) ? 1 : (a.name > b.name) ? -1 : 0);\n    //       this.contactListChangedEvent.next(this.contacts.slice());\n\n    //       (error: any) => {\n    //         console.log(error);\n    //       }\n    //     })\n  }\n\n  // getContacts(): Contact[] { return this.contacts.slice(); }\n\n\n  getTrendingMovie(id: string): TrendingMovie {\n    // const url = 'https://api.themoviedb.org/3/'\n    // const apiKey = 'f4ec058abc3d746728270f736f4851fd'\n    // console.log(\"`${url}contact/${id}?api_key=${apiKey}`\" + `${url}movie/${id}?api_key=${apiKey}`)\n\n    // return this.http.get(`${url}movie/${id}?api_key=${apiKey}`);\n\n\n    // const url = 'https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd'\n    // this.http.get(url).subscribe((res) => {\n    //   this.data = res\n    //   this.topRated = this.data.results\n\n\n    //   for (let i = 0; i < this.topRated.length; i++) {\n    //     if (this.topRated[i].id == id) {\n\n    //       console.log(\"Movie selected\")\n    //       console.log(\"Id: \" + this.topRated[i].id)\n    //       console.log(\"Title: \" + this.topRated[i].title)\n    //       console.log(\"Overview: \" + this.topRated[i].overview)\n    //       console.log(\"Poster: \" + this.topRated[i].poster_path)\n    //       console.log(\"Vote: \" + this.topRated[i].vote_average)\n    //       console.log(\"Release: \" + this.topRated[i].release_date)\n\n    //       console.log('topRated[i]' + this.topRated[i])\n    //       return this.topRated[i];\n    //     }\n    //   }\n    // })\n\n    return null!;\n\n  }\n\n  // getContact(id: string): Contact {\n\n  //   const url = 'https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd'\n  //   this.http.get(url).subscribe((res) => {\n  //     this.data = res\n  //     this.topRated = this.data.results\n\n\n  //     for (let i = 0; i < this.topRated.length; i++) {\n  //       if (this.topRated[i].id == id) {\n\n  //         console.log(\"Movie selected\")\n  //         console.log(\"Id: \" + this.topRated[i].id)\n  //         console.log(\"Title: \" + this.topRated[i].title)\n  //         console.log(\"Overview: \" + this.topRated[i].overview)\n  //         console.log(\"Poster: \" + this.topRated[i].poster_path)\n  //         console.log(\"Vote: \" + this.topRated[i].vote_average)\n  //         console.log(\"Release: \" + this.topRated[i].release_date)\n\n  //         return this.topRated[i];\n  //       }\n  //     }\n  //   })\n\n  //   return null!;\n\n  // }\n\n\n  getMaxId(): number {\n    let maxId = 0;\n    for (const trendingMovie of this.trendingMovies) {\n      const currentId = +trendingMovie.id;\n      if (currentId > maxId) {\n        maxId = currentId;\n      }\n    }\n    return maxId;\n  }\n\n  addTrendingMovie(newTrendingMovie: TrendingMovie) {\n    if (newTrendingMovie === null || newTrendingMovie === undefined) {\n      return;\n    }\n\n    // this.maxContactId++;\n    // newContact.id = this.maxContactId.toString();\n    // this.contacts.push(newContact);\n    // this.storeContacts();\n\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    newContact.id = '';\n    const strContact = JSON.stringify(newContact);\n\n    this.http.post('http://127.0.0.1:4200/contacts/', strContact, { headers: headers })\n      .subscribe(\n        () => {\n          this.contactChangedEvent.next(this.contacts.slice());\n        });\n  }\n\n  updateContact(originalContact: Contact, newContact: Contact) {\n    if (!originalContact || !newContact) {\n      return;\n    }\n\n    const pos = this.contacts.findIndex(c => c.id === originalContact.id);\n\n    // const pos = this.contacts.indexOf(originalContact);\n    if (pos < 0) {\n      return;\n    }\n\n    newContact.id = originalContact.id;\n\n    // newContact.id = originalContact.id;\n    // this.contacts[pos] = newContact;\n    // this.storeContacts();\n    //set headers\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    // const strContact = JSON.stringify(newContact);\n\n    this.http.patch('http://127.0.0.1:4200/contacts/' + originalContact.id\n      , newContact, { headers: headers })\n      .subscribe(\n        () => {\n          this.contacts[pos] = newContact;\n          this.contactListChangedEvent.next(this.contacts.slice());\n        });\n  }\n\n  deleteContact(contact: Contact) {\n    // if (contact === null || contact === undefined) {\n    //   return;\n    // }\n    // const pos = this.contacts.indexOf(contact);\n\n    // if (pos < 0) {\n    //   return;\n    // }\n    // // this.contacts.splice(pos, 1);\n    // // this.storeContacts();\n    // this.http.delete('http://127.0.0.1:4200/contacts/' + contact.id)\n    //   .subscribe(\n    //     () => {\n    //       this.contactListChangedEvent.next(this.contacts.slice());\n    //     });\n\n  }\n\n  storeContacts() {\n    let contacts = JSON.stringify(this.contacts);\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.http.put('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd', contacts, { headers: headers })\n      .subscribe(\n        () => {\n          this.contactListChangedEvent.next(this.contacts.slice());\n        }\n      )\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}