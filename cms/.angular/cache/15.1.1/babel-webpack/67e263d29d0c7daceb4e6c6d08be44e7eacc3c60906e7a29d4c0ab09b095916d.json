{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ng2-dnd\";\nimport * as i6 from \"./contact-item/contact-item.component\";\nimport * as i7 from \"../contacts-filter.pipe\";\nconst _c0 = function () {\n  return [\"contactGroup\"];\n};\nfunction ContactListComponent_app_contact_item_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-contact-item\", 14);\n  }\n  if (rf & 2) {\n    const contactEl_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"contact\", contactEl_r2)(\"dragEnabled\", true)(\"dragData\", contactEl_r2)(\"dropZones\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\nconst _c1 = function () {\n  return [\"new\"];\n};\nexport class ContactListComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.term = '';\n    this.contacts = [];\n  }\n  ngOnInit() {\n    this.subscription = this.contactService.contactListChangedEvent.subscribe(contacts => {\n      this.contacts = contacts;\n    });\n    this.contactService.getContacts();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  search(value) {\n    this.term = value;\n  }\n}\nContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n  return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactListComponent,\n  selectors: [[\"cms-contact-list\"]],\n  decls: 23,\n  vars: 8,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"title\"], [1, \"input-group\", \"pull-left\", \"pad-left-right\", \"col-xs-7\"], [\"type\", \"text\", \"ngModel\", \"\", \"placeholder\", \"Enter a Search value\", 1, \"form-control\", 3, \"keyup\"], [\"searchBox\", \"ngModel\"], [3, \"click\"], [1, \"pull-right\", \"pad-left-right\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"panel-body\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"dragEnabled\", \"dragData\", \"dropZones\", 4, \"ngFor\", \"ngForOf\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"dragEnabled\", \"dragData\", \"dropZones\"]],\n  template: function ContactListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \"Contacts\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 0)(8, \"div\", 6)(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"keyup\", function ContactListComponent_Template_input_keyup_9_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵlistener(\"click\", function ContactListComponent_Template_div_click_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"a\", 11);\n      i0.ɵɵtext(14, \"New Contact\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"a\", 11);\n      i0.ɵɵtext(17, \"New Contact\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(18, \"div\", 12)(19, \"div\", 0)(20, \"div\", 1);\n      i0.ɵɵtemplate(21, ContactListComponent_app_contact_item_21_Template, 1, 5, \"app-contact-item\", 13);\n      i0.ɵɵpipe(22, \"contactsFilter\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c1));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(22, 3, ctx.contacts, _r0.value));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RouterLink, i5.DraggableComponent, i6.ContactItemComponent, i7.ContactsFilterPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;IA8BYA,uCAWmB;;;;IANjBA,sCAAqB;;;;;;ACxBnC,OAAM,MAAOC,oBAAoB;EAW/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IATlC,SAAI,GAAW,EAAE;IAGjB,aAAQ,GAAc,EAAE;EAQxB;EAEAC,QAAQ;IAEN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,cAAc,CAACG,uBAAuB,CAC5DC,SAAS,CAAEC,QAAmB,IAAI;MACjC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;IAGJ,IAAI,CAACL,cAAc,CAACM,WAAW,EAAE;EACnC;EAKAC,WAAW;IACT,IAAI,CAACL,YAAY,CAACM,WAAW,EAAE;EACjC;EAGAC,MAAM,CAACC,KAAa;IAElB,IAAI,CAACC,IAAI,GAAGD,KAAK;EACnB;;AArCWZ,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDXjCnB,8BAAiB;MAKaA,wBAAQ;MAAAA,iBAAO;MAErCA,8BAAiB;MAKXA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAHnCA,iBAOE;MACFA,+BAAuC;MAAlCA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAACA,iBAAM;MAE/CA,gCAAuC;MACaA,4BAAW;MAAAA,iBAAI;MAEnEA,gCAAuC;MACaA,4BAAW;MAAAA,iBAAI;MAIvEA,gCAAwB;MAGlBA,kGAWmB;;MACrBA,iBAAM;;;;MAtBuBA,gBAAsB;MAAtBA,uDAAsB;MAGtBA,eAAsB;MAAtBA,uDAAsB;MASdA,eAE5C;MAF4CA,wEAE5C","names":["i0","ContactListComponent","constructor","contactService","ngOnInit","subscription","contactListChangedEvent","subscribe","contacts","getContacts","ngOnDestroy","unsubscribe","search","value","term","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/contacts/contact-list/contact-list.component.html","/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/contacts/contact-list/contact-list.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <div class=\"row pad-left-right\">\n          <span class=\"title\">Contacts</span>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-group pull-left pad-left-right col-xs-7\">\n            <input\n              type=\"text\"\n              ngModel\n              (keyup)=\"search(searchBox.value)\"\n              placeholder=\"Enter a Search value\"\n              #searchBox=\"ngModel\"\n              class=\"form-control\"\n            />\n            <div (click)=\"search(searchBox.value)\"></div>\n          </div>\n          <div class=\"pull-right pad-left-right\">\n            <a class=\"btn btn-success\" [routerLink]=\"['new']\">New Contact</a>\n          </div>\n          <div class=\"pull-right pad-left-right\">\n            <a class=\"btn btn-success\" [routerLink]=\"['new']\">New Contact</a>\n          </div>\n        </div>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <app-contact-item\n              *ngFor=\"\n                let contactEl of contacts | contactsFilter : searchBox.value;\n                let i = index\n              \"\n              [contact]=\"contactEl\"\n              dnd-draggable\n              [dragEnabled]=\"true\"\n              [dragData]=\"contactEl\"\n              [dropZones]=\"['contactGroup']\"\n            >\n            </app-contact-item>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Contact } from '../contacts.model';\nimport { ContactService } from '../contact.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'cms-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit, OnDestroy {\n\n  term: String = '';\n\n\n  contacts: Contact[] = []\n\n\n  private subscription!: Subscription;\n\n\n  constructor(private contactService: ContactService) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.subscription = this.contactService.contactListChangedEvent\n      .subscribe((contacts: Contact[]) => {\n        this.contacts = contacts;\n      });\n\n\n    this.contactService.getContacts();\n  }\n\n\n\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n\n  search(value: String) {\n\n    this.term = value;\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}