{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../document.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./documents-item/documents-item.component\";\nfunction DocumentsListComponent_app_documents_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-documents-item\", 12);\n  }\n  if (rf & 2) {\n    const documentEl_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"document\", documentEl_r2);\n  }\n}\nconst _c0 = function () {\n  return [\"new\"];\n};\nexport class DocumentsListComponent {\n  constructor(documentService) {\n    this.documentService = documentService;\n    this.selectedDocumentEvent = new EventEmitter();\n    this.term = '';\n    this.documents = [];\n  }\n  ngOnInit() {\n    // TO DELETE THE FOLLOWING LINE WHEN READY TO USE FIREBASE\n    // this.documents = this.documentService.getDocuments();\n    this.subscription = this.documentService.documentListChangedEvent.subscribe(documents => {\n      this.documents = documents;\n    });\n    // USE THE FOLLOWING TO GET DOCUMENTS FROM FIREBASE\n    this.documentService.getDocuments();\n  }\n  // TO CHANGE THIS WITH REAL DATA\n  // this function is add a new document using hard coded details\n  onAdd() {\n    // fake add document \n    // let testDocument = new Document(this.documentService.getMaxId().toString(), 'The Book of Mormon', 'Another Testament of Jesus Christ', 'https://www.churchofjesuschrist.org/study/scriptures/bofm?lang=eng', 'child')\n    // this.documentService.addDocument(testDocument);\n  }\n  search(value) {\n    this.term = value;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\nDocumentsListComponent.ɵfac = function DocumentsListComponent_Factory(t) {\n  return new (t || DocumentsListComponent)(i0.ɵɵdirectiveInject(i1.DocumentService));\n};\nDocumentsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentsListComponent,\n  selectors: [[\"app-documents-list\"]],\n  outputs: {\n    selectedDocumentEvent: \"selectedDocumentEvent\"\n  },\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"pull-left\", \"title\"], [1, \"btn\", \"btn-success\", \"pull-right\", 3, \"routerLink\", \"click\"], [1, \"input-group\", \"pull-left\", \"pad-left-right\", \"col-xs-7\"], [\"type\", \"text\", \"ngModel\", \"\", \"placeholder\", \"Enter a Search value\", 1, \"form-control\", 3, \"keyup\"], [\"searchBox\", \"ngModel\"], [3, \"click\"], [1, \"panel-body\"], [1, \"row\"], [3, \"document\", 4, \"ngFor\", \"ngForOf\"], [3, \"document\"]],\n  template: function DocumentsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n      i0.ɵɵtext(4, \"Movies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"a\", 4);\n      i0.ɵɵlistener(\"click\", function DocumentsListComponent_Template_a_click_5_listener() {\n        return ctx.onAdd();\n      });\n      i0.ɵɵtext(6, \"Add Movie\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"keyup\", function DocumentsListComponent_Template_input_keyup_9_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵlistener(\"click\", function DocumentsListComponent_Template_div_click_11_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵelement(13, \"div\", 10);\n      i0.ɵɵtemplate(14, DocumentsListComponent_app_documents_item_14_Template, 1, 1, \"app-documents-item\", 11);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.documents);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RouterLink, i5.DocumentsItemComponent],\n  styles: [\".center-panel[_ngcontent-%COMP%] {\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 38rem;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-size: 2.5rem;\\n  font-weight: bold;\\n}\\n\\n.pad-left-right[_ngcontent-%COMP%]{\\n  padding-left:1rem;\\n  padding-right:1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdW1lbnRzL2RvY3VtZW50cy1saXN0L2RvY3VtZW50cy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNlbnRlci1wYW5lbCB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHdpZHRoOiAzOHJlbTtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ucGFkLWxlZnQtcmlnaHR7XG4gIHBhZGRpbmctbGVmdDoxcmVtO1xuICBwYWRkaW5nLXJpZ2h0OjFyZW07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAmC,eAAe;;;;;;;;;IC2B9EC,yCAGsB;;;;IADpBA,wCAAuB;;;;;;ADnB7B,OAAM,MAAOC,sBAAsB;EAUjCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IATzB,0BAAqB,GAAG,IAAIJ,YAAY,EAAY;IAE9D,SAAI,GAAW,EAAE;IAGjB,cAAS,GAAe,EAAE;EAI8B;EAExDK,QAAQ;IACN;IACA;IAEA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,eAAe,CAACG,wBAAwB,CAACC,SAAS,CACxEC,SAAqB,IAAI;MACxB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CACF;IAED;IACA,IAAI,CAACL,eAAe,CAACM,YAAY,EAAE;EACrC;EAGA;EACA;EACAC,KAAK;IAEH;IACA;IACA;EAAA;EAIFC,MAAM,CAACC,KAAa;IAElB,IAAI,CAACC,IAAI,GAAGD,KAAK;EACnB;EAGAE,WAAW;IACT,IAAI,CAACT,YAAY,CAACU,WAAW,EAAE;EACjC;;AA7CWd,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAe;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVnCtB,8BAAiC;MAGGA,sBAAM;MAAAA,iBAAO;MAC3CA,4BAIG;MADDA;QAAA,OAASuB,WAAO;MAAA,EAAC;MAChBvB,yBAAS;MAAAA,iBACX;MACDA,qBAAM;MACNA,8BAA2D;MAIvDA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAHnCA,iBAOE;MACFA,+BAAuC;MAAlCA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAACA,iBAAM;MAKnDA,+BAAwB;MACtBA,2BAAuB;MACvBA,wGAGsB;MACxBA,iBAAM;;;MAzBAA,eAAsB;MAAtBA,uDAAsB;MAsBDA,eAAY;MAAZA,uCAAY","names":["EventEmitter","i0","DocumentsListComponent","constructor","documentService","ngOnInit","subscription","documentListChangedEvent","subscribe","documents","getDocuments","onAdd","search","value","term","ngOnDestroy","unsubscribe","selectors","outputs","selectedDocumentEvent","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/documents/documents-list/documents-list.component.ts","/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/documents/documents-list/documents-list.component.html"],"sourcesContent":["import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Document } from '../documents.model';\nimport { DocumentService } from '../document.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-documents-list',\n  templateUrl: './documents-list.component.html',\n  styleUrls: ['./documents-list.component.css']\n})\nexport class DocumentsListComponent implements OnInit, OnDestroy {\n  @Output() selectedDocumentEvent = new EventEmitter<Document>();\n\n  term: String = '';\n\n\n  documents: Document[] = [];\n\n  private subscription!: Subscription;\n\n  constructor(private documentService: DocumentService) { }\n\n  ngOnInit(): void {\n    // TO DELETE THE FOLLOWING LINE WHEN READY TO USE FIREBASE\n    // this.documents = this.documentService.getDocuments();\n\n    this.subscription = this.documentService.documentListChangedEvent.subscribe(\n      (documents: Document[]) => {\n        this.documents = documents;\n      }\n    )\n\n    // USE THE FOLLOWING TO GET DOCUMENTS FROM FIREBASE\n    this.documentService.getDocuments();\n  }\n\n\n  // TO CHANGE THIS WITH REAL DATA\n  // this function is add a new document using hard coded details\n  onAdd() {\n\n    // fake add document \n    // let testDocument = new Document(this.documentService.getMaxId().toString(), 'The Book of Mormon', 'Another Testament of Jesus Christ', 'https://www.churchofjesuschrist.org/study/scriptures/bofm?lang=eng', 'child')\n    // this.documentService.addDocument(testDocument);\n\n  }\n\n  search(value: String) {\n\n    this.term = value;\n  }\n\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"panel panel-default\">\n  <div class=\"panel-heading\">\n    <div class=\"row pad-left-right\">\n      <span class=\"pull-left title\">Movies</span>\n      <a\n        class=\"btn btn-success pull-right\"\n        [routerLink]=\"['new']\"\n        (click)=\"onAdd()\"\n        >Add Movie</a\n      >\n      <br />\n      <div class=\"input-group pull-left pad-left-right col-xs-7\">\n        <input\n          type=\"text\"\n          ngModel\n          (keyup)=\"search(searchBox.value)\"\n          placeholder=\"Enter a Search value\"\n          #searchBox=\"ngModel\"\n          class=\"form-control\"\n        />\n        <div (click)=\"search(searchBox.value)\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"panel-body\">\n    <div class=\"row\"></div>\n    <app-documents-item\n      *ngFor=\"let documentEl of documents\"\n      [document]=\"documentEl\"\n    ></app-documents-item>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}