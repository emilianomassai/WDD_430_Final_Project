{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../messages.service\";\nfunction MessageListComponent_app_message_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-message-item\", 11);\n  }\n  if (rf & 2) {\n    const messageEl_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"message\", messageEl_r1);\n  }\n}\nexport class MessageListComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.messageService.messageListChangedEvent.subscribe(messages => {\n      this.messages = messages;\n    });\n    this.messageService.getMessages();\n  }\n  onAddMessage(message) {\n    this.messages.push(message);\n  }\n}\nMessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n  return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i1.MessagesService));\n};\nMessageListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageListComponent,\n  selectors: [[\"app-message-list\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-md-5\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"title\", \"pull-left\"], [1, \"panel-body\"], [1, \"col-xs-12\"], [3, \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"panel-footer\"], [3, \"addMessageEvent\"], [3, \"message\"]],\n  template: function MessageListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \"Messages\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 0)(9, \"div\", 7);\n      i0.ɵɵtemplate(10, MessageListComponent_app_message_item_10_Template, 1, 1, \"app-message-item\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"app-message-edit\", 10);\n      i0.ɵɵlistener(\"addMessageEvent\", function MessageListComponent_Template_app_message_edit_addMessageEvent_12_listener($event) {\n        return ctx.onAddMessage($event);\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  styles: [\".title[_ngcontent-%COMP%] {\\n    font-size: 2.5rem;\\n    font-weight: bold;\\n  }\\n  \\n  .pad-left-right[_ngcontent-%COMP%] {\\n    padding-left: 1rem;\\n    padding-right: 1rem;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZS1saXN0L21lc3NhZ2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAucGFkLWxlZnQtcmlnaHQge1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAWYA,uCAGoB;;;;IADlBA,sCAAqB;;;ACJnC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,cAA+B;IAA/B,mBAAc,GAAdA,cAAc;IAFlC,aAAQ,GAAc,EAAE;EAIxB;EAEAC,QAAQ;IAEN,IAAI,CAACD,cAAc,CAACE,uBAAuB,CAACC,SAAS,CAAEC,QAAmB,IAAI;MAC5E,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACJ,cAAc,CAACK,WAAW,EAAE;EACnC;EAEAC,YAAY,CAACC,OAAgB;IAC3B,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;EAC7B;;AAlBWT,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjChB,8BAAiB;MAKuBA,wBAAQ;MAAAA,iBAAO;MAGjDA,8BAAwB;MAGlBA,iGAGoB;MACtBA,iBAAM;MAGVA,+BAA0B;MAEtBA;QAAA,OAAmBiB,wBAAoB;MAAA,EAAC;MACzCjB,iBAAmB;;;MATQA,gBAAW;MAAXA,sCAAW","names":["i0","MessageListComponent","constructor","messageService","ngOnInit","messageListChangedEvent","subscribe","messages","getMessages","onAddMessage","message","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/messages/message-list/message-list.component.html","/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/messages/message-list/message-list.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"col-md-5\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <div class=\"row pad-left-right\">\n          <span class=\"title pull-left\">Messages</span>\n        </div>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <app-message-item\n              *ngFor=\"let messageEl of messages\"\n              [message]=\"messageEl\"\n            ></app-message-item>\n          </div>\n        </div>\n      </div>\n      <div class=\"panel-footer\">\n        <app-message-edit\n          (addMessageEvent)=\"onAddMessage($event)\"\n        ></app-message-edit>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../message.model';\nimport { MessagesService } from '../messages.service';\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.css']\n})\nexport class MessageListComponent implements OnInit {\n  messages: Message[] = [];\n\n  constructor(private messageService: MessagesService) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.messageService.messageListChangedEvent.subscribe((messages: Message[]) => {\n      this.messages = messages;\n    });\n\n    this.messageService.getMessages();\n  }\n\n  onAddMessage(message: Message) {\n    this.messages.push(message);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}