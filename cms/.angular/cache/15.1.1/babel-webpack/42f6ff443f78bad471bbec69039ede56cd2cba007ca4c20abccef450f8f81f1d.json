{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TrendingMovieService {\n  constructor(http) {\n    this.http = http;\n    this.trendingMovieChangedEvent = new EventEmitter();\n    this.trendingMovieListChangedEvent = new Subject();\n    this.data = [];\n    this.topRated = [];\n    this.trendingMovies = [];\n    this.maxTrendingMovieId = this.getMaxId();\n  }\n  findTrending() {\n    return this.http.get('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd');\n  }\n  getTrendingMovies() {}\n  getTrendingMovie(id) {\n    return null;\n  }\n  getMaxId() {\n    let maxId = 0;\n    for (const trendingMovie of this.trendingMovies) {\n      const currentId = +trendingMovie.id;\n      if (currentId > maxId) {\n        maxId = currentId;\n      }\n    }\n    return maxId;\n  }\n  addTrendingMovie(newTrendingMovie) {\n    if (newTrendingMovie === null || newTrendingMovie === undefined) {\n      return;\n    }\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    newTrendingMovie.id = '';\n    const strTrendingMovie = JSON.stringify(newTrendingMovie);\n    this.http.post('http://127.0.0.1:4200/trendingMovies/', strTrendingMovie, {\n      headers: headers\n    }).subscribe(() => {\n      this.trendingMovieChangedEvent.next(this.trendingMovies.slice());\n    });\n  }\n  updateTrendingMovie(originalTrendingMovie, newTrendingMovie) {\n    if (!originalTrendingMovie || !newTrendingMovie) {\n      return;\n    }\n    const pos = this.trendingMovies.findIndex(c => c.id === originalTrendingMovie.id);\n    if (pos < 0) {\n      return;\n    }\n    newTrendingMovie.id = originalTrendingMovie.id;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.http.patch('http://127.0.0.1:4200/trendingMovies/' + originalTrendingMovie.id, newTrendingMovie, {\n      headers: headers\n    }).subscribe(() => {\n      this.trendingMovies[pos] = newTrendingMovie;\n      this.trendingMovieListChangedEvent.next(this.trendingMovies.slice());\n    });\n  }\n  deleteTrendingMovie(trendingMovie) {}\n  storeTrendingMovies() {\n    let trendingMovies = JSON.stringify(this.trendingMovies);\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.http.put('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd', trendingMovies, {\n      headers: headers\n    }).subscribe(() => {\n      this.trendingMovieListChangedEvent.next(this.trendingMovies.slice());\n    });\n  }\n}\nTrendingMovieService.ɵfac = function TrendingMovieService_Factory(t) {\n  return new (t || TrendingMovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nTrendingMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrendingMovieService,\n  factory: TrendingMovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","HttpHeaders","Subject","TrendingMovieService","constructor","http","maxTrendingMovieId","getMaxId","findTrending","get","getTrendingMovies","getTrendingMovie","id","maxId","trendingMovie","trendingMovies","currentId","addTrendingMovie","newTrendingMovie","undefined","headers","strTrendingMovie","JSON","stringify","post","subscribe","trendingMovieChangedEvent","next","slice","updateTrendingMovie","originalTrendingMovie","pos","findIndex","c","patch","trendingMovieListChangedEvent","deleteTrendingMovie","storeTrendingMovies","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/trendingMovies/trendingMovie.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TrendingMovie } from './trendingMovies.model';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrendingMovieService {\n  trendingMovieChangedEvent = new EventEmitter<TrendingMovie[]>();\n\n  trendingMovieListChangedEvent = new Subject<TrendingMovie[]>();\n\n  maxTrendingMovieId: number;\n  public data: any = [];\n  public topRated: any = [];\n\n  private trendingMovies: TrendingMovie[] = [];\n\n  constructor(private http: HttpClient) {\n\n    this.maxTrendingMovieId = this.getMaxId();\n  }\n\n\n  findTrending() {\n    return this.http.get('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd');\n\n  }\n\n  getTrendingMovies() {\n\n  }\n\n\n\n  getTrendingMovie(id: string): TrendingMovie {\n\n\n    return null!;\n\n  }\n\n\n  getMaxId(): number {\n    let maxId = 0;\n    for (const trendingMovie of this.trendingMovies) {\n      const currentId = +trendingMovie.id;\n      if (currentId > maxId) {\n        maxId = currentId;\n      }\n    }\n    return maxId;\n  }\n\n  addTrendingMovie(newTrendingMovie: TrendingMovie) {\n    if (newTrendingMovie === null || newTrendingMovie === undefined) {\n      return;\n    }\n\n\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    newTrendingMovie.id = '';\n    const strTrendingMovie = JSON.stringify(newTrendingMovie);\n\n    this.http.post('http://127.0.0.1:4200/trendingMovies/', strTrendingMovie, { headers: headers })\n      .subscribe(\n        () => {\n          this.trendingMovieChangedEvent.next(this.trendingMovies.slice());\n        });\n  }\n\n  updateTrendingMovie(originalTrendingMovie: TrendingMovie, newTrendingMovie: TrendingMovie) {\n    if (!originalTrendingMovie || !newTrendingMovie) {\n      return;\n    }\n\n    const pos = this.trendingMovies.findIndex(c => c.id === originalTrendingMovie.id);\n\n    if (pos < 0) {\n      return;\n    }\n\n    newTrendingMovie.id = originalTrendingMovie.id;\n\n\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n\n    this.http.patch('http://127.0.0.1:4200/trendingMovies/' + originalTrendingMovie.id\n      , newTrendingMovie, { headers: headers })\n      .subscribe(\n        () => {\n          this.trendingMovies[pos] = newTrendingMovie;\n          this.trendingMovieListChangedEvent.next(this.trendingMovies.slice());\n        });\n  }\n\n  deleteTrendingMovie(trendingMovie: TrendingMovie) {\n\n\n  }\n\n  storeTrendingMovies() {\n    let trendingMovies = JSON.stringify(this.trendingMovies);\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n\n    this.http.put('https://api.themoviedb.org/3/trending/all/day?api_key=f4ec058abc3d746728270f736f4851fd', trendingMovies, { headers: headers })\n      .subscribe(\n        () => {\n          this.trendingMovieListChangedEvent.next(this.trendingMovies.slice());\n        }\n      )\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}