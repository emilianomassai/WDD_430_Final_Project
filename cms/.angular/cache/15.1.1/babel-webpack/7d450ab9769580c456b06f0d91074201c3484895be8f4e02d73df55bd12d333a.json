{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Message } from '../message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../messages.service\";\nconst _c0 = [\"subject\"];\nconst _c1 = [\"msgText\"];\nexport class MessageEditComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.addMessageEvent = new EventEmitter();\n    this.currentSender = '15';\n  }\n  ngOnInit() {}\n  onSendMessage() {\n    const subject = this.subject.nativeElement.value;\n    const msgText = this.msgText.nativeElement.value;\n    const msgId = this.messageService.getMaxId() + 1;\n    const message = new Message(msgId.toString(), subject, msgText, this.currentSender);\n    this.messageService.addMessage(message);\n    this.onClear();\n  }\n  onClear() {\n    this.subject.nativeElement.value = '';\n    this.msgText.nativeElement.value = '';\n  }\n}\nMessageEditComponent.ɵfac = function MessageEditComponent_Factory(t) {\n  return new (t || MessageEditComponent)(i0.ɵɵdirectiveInject(i1.MessagesService));\n};\nMessageEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageEditComponent,\n  selectors: [[\"app-message-edit\"]],\n  viewQuery: function MessageEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subject = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.msgText = _t.first);\n    }\n  },\n  outputs: {\n    addMessageEvent: \"addMessageEvent\"\n  },\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"document-edit\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subject\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\"], [\"subject\", \"\"], [\"for\", \"message\"], [\"type\", \"text\", \"id\", \"message\", \"size\", \"120\", \"max\", \"255\", 1, \"form-control\"], [\"msgText\", \"\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function MessageEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 11)(16, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_16_listener() {\n        return ctx.onSendMessage();\n      });\n      i0.ɵɵtext(17, \" Send \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_18_listener() {\n        return ctx.onClear();\n      });\n      i0.ɵɵtext(19, \" Clear \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2DA,YAAY,QAAQ,eAAe;AAC9F,SAASC,OAAO,QAAQ,kBAAkB;;;;;AAS1C,OAAM,MAAOC,oBAAoB;EAM/BC,YAAoBC,cAA+B;IAA/B,mBAAc,GAAdA,cAAc;IAHxB,oBAAe,GAAG,IAAIJ,YAAY,EAAW;IACvD,kBAAa,GAAW,IAAI;EAE2B;EAEvDK,QAAQ,IACR;EACAC,aAAa;IACX,MAAMC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,aAAa,CAACC,KAAK;IAChD,MAAMC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACF,aAAa,CAACC,KAAK;IAChD,MAAME,KAAK,GAAG,IAAI,CAACP,cAAc,CAACQ,QAAQ,EAAE,GAAG,CAAC;IAEhD,MAAMC,OAAO,GAAG,IAAIZ,OAAO,CAACU,KAAK,CAACG,QAAQ,EAAE,EAAEP,OAAO,EAAEG,OAAO,EAAE,IAAI,CAACK,aAAa,CAAC;IAEnF,IAAI,CAACX,cAAc,CAACY,UAAU,CAACH,OAAO,CAAC;IACvC,IAAI,CAACI,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACV,OAAO,CAACC,aAAa,CAACC,KAAK,GAAG,EAAE;IACrC,IAAI,CAACC,OAAO,CAACF,aAAa,CAACC,KAAK,GAAG,EAAE;EACvC;;AAxBWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;IAAA;;;;;;;;;;;;;;;;;;MCVjCC,8BAAiC;MAKFA,uBAAO;MAAAA,iBAAQ;MACpCA,8BAOE;MACJA,iBAAM;MAENA,8BAAkC;MACXA,wBAAO;MAAAA,iBAAQ;MACpCA,gCAOE;MACJA,iBAAM;MAGRA,+BAAiB;MAKXA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAEzBD,uBACF;MAAAA,iBAAS;MACTA,mCAAiE;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAC9DD,wBACF;MAAAA,iBAAS","names":["EventEmitter","Message","MessageEditComponent","constructor","messageService","ngOnInit","onSendMessage","subject","nativeElement","value","msgText","msgId","getMaxId","message","toString","currentSender","addMessage","onClear","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/messages/message-edit/message-edit.component.ts","/Users/emilianomassai/Documents/GitHub/WDD_430_Final_Project/cms/src/app/messages/message-edit/message-edit.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Message } from '../message.model';\nimport { MessagesService } from '../messages.service';\n\n\n@Component({\n  selector: 'app-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.css']\n})\nexport class MessageEditComponent implements OnInit {\n  @ViewChild('subject') subject!: ElementRef;\n  @ViewChild('msgText') msgText!: ElementRef;\n  @Output() addMessageEvent = new EventEmitter<Message>();\n  currentSender: string = '15';\n\n  constructor(private messageService: MessagesService) { }\n\n  ngOnInit(): void {\n  }\n  onSendMessage() {\n    const subject = this.subject.nativeElement.value;\n    const msgText = this.msgText.nativeElement.value;\n    const msgId = this.messageService.getMaxId() + 1;\n\n    const message = new Message(msgId.toString(), subject, msgText, this.currentSender);\n\n    this.messageService.addMessage(message)\n    this.onClear()\n  }\n\n  onClear() {\n    this.subject.nativeElement.value = '';\n    this.msgText.nativeElement.value = '';\n  }\n}\n","<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"document-edit\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"subject\">Subject</label>\n          <input\n            type=\"text\"\n            id=\"subject\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"120\"\n            #subject\n          />\n        </div>\n\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"message\">Message</label>\n          <input\n            type=\"text\"\n            id=\"message\"\n            class=\"form-control\"\n            size=\"120\"\n            max=\"255\"\n            #msgText\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button\n            class=\"btn btn-success\"\n            type=\"button\"\n            (click)=\"onSendMessage()\"\n          >\n            Send\n          </button>\n          <button class=\"btn btn-danger\" type=\"button\" (click)=\"onClear()\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}